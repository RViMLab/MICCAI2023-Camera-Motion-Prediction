experiment: 'test/miccai/feature_lstm/cholec80'
lightning_module: 'FeatureLSTMModule'
lightning_data_module: 'ImageSequenceDuvDataModule'
model_checkpoint: 
    monitor: 'val/loss'
    mode: 'min'
trainer:
    accelerator: 'gpu'
    devices: 1
    max_epochs: 50
    log_every_n_steps: 10
    limit_train_batches: 1.0
    limit_val_batches: 1.0
    limit_test_batches: 1.0
    fast_dev_run: False
    profiler: False
    reload_dataloaders_every_n_epochs: 1
data:
    pkl_name: '22_11_21_deep_log_pre_processed_test_train_no_nan.pkl' # 'pre_processed_5th_frame_log_test_train_no_nan.pkl'
    pkl_path: 'cholec80_frames' # '21_11_25_first_test_data_frames'
    train_split: 0.8
    batch_size: 2
    num_workers: 1
    random_state: 42
    tolerance: 0.2 # change this tolerance
    seq_len: 20
    frame_increment: 1
    frames_between_clips: 20 # seq_len*frame_increment
    random_frame_offset: False
    train_transforms:
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'MultiplyAndAddToBrightness', 'kwargs': {'mul': [0.5, 1.5], 'add': [30, 30]}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'Grayscale',                  'kwargs': {}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'ChangeColorTemperature',     'kwargs': {'kelvin': [3000, 15000]}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters.imgcorruptlike', 'type': 'Contrast',                   'kwargs': {'severity': 1}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'AdditiveGaussianNoise',                 'kwargs': {'scale': [0, 51]}}
    val_transforms: null
    test_transforms: null
    load_images: True
callbacks:
    - name: "WorstSamplingCallback"
      kwargs: {
        "worst": 0.1,
        "random": 0.2
      }
model:
    encoder: {
        module: "models",
        name: "VarResNet",
        kwargs: {
            "in_channels": 3,
            "out_features": 64,
            "name": "resnet18",
            "pretrained": True
        }
    }
    lstm: {
        module: "torch.nn",
        name: "LSTM",
        kwargs: {
            "input_size": 72, # out_features + 8
            "hidden_size": 128
        }
    }
    head: [
        {
            module: "torch.nn",
            name: "LayerNorm",
            kwargs: {
                "normalized_shape": 128
            }
        },
        {
            module: "torch.nn",
            name: "Linear",
            kwargs: {
                "in_features": 128,
                "out_features": 8
            }
        },
        {
            module: "torch.nn",
            name: "Dropout",
            kwargs: {}       
        }
    ]
    optimizer: {
        module: "torch.optim",
        name: "Adam",
        kwargs: {
            "lr": 1.e-2,
            "betas": [0.9, 0.999]
        }
    }
    loss: {
        module: "torch.nn",
        name: "PairwiseDistance",
        kwargs: {}
    }
