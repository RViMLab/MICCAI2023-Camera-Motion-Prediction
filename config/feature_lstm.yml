experiment: 'miccai/feature_lstm/adaptive'
lightning_module: 'FeatureLSTMModule'
lightning_data_module: 'ImageSequenceDataModule'
model_checkpoint: 
    monitor: 'val/distance'
    mode: 'min'
trainer:
    accelerator: 'gpu'
    devices: 1
    max_epochs: 500
    log_every_n_steps: 250
    limit_train_batches: 1.0
    limit_val_batches: 1.0
    limit_test_batches: 1.0
    fast_dev_run: False
    profiler: False
    reload_dataloaders_every_n_epochs: 1
data:
    pkl_name: '22_11_09_deep_pre_processed_frame_increment_5_frames_between_clips_5_log_test_train_no_nan.pkl' # 'pre_processed_5th_frame_log_test_train_no_nan.pkl'
    pkl_path: 'cholec80_single_video_frames_cropped' # '21_11_25_first_test_data_frames'
    train_split: 0.8
    batch_size: 16
    num_workers: 4
    random_state: 42
    tolerance: 0.2 # change this tolerance
    seq_len: 20
    frame_increment: 1
    frames_between_clips: 20 # seq_len*frame_increment
    random_frame_offset: False
    train_transforms:
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'MultiplyAndAddToBrightness', 'kwargs': {'mul': [0.5, 1.5], 'add': [30, 30]}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'Grayscale',                  'kwargs': {}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'ChangeColorTemperature',     'kwargs': {'kelvin': [3000, 15000]}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters.imgcorruptlike', 'type': 'Contrast',                   'kwargs': {'severity': 1}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'GaussianBlur',               'kwargs': {}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'MotionBlur',                 'kwargs': {'k': 15, 'angle': [-45, 45]}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'AdditiveGaussianNoise',                 'kwargs': {'scale': [0, 51]}}
        - {'chance': 0.2, 'module': 'imgaug.augmenters',                'type': 'Cutout',                 'kwargs': {'nb_iterations': [1, 5], 'cval': 0, 'squared': False}}
    val_transforms: null
    test_transforms: null
    load_images: True
callbacks:
    - name: "WorstSamplingCallback"
      kwargs: {
        "worst": 0.1,
        "random": 0.2
      }
model:
    backbone: {
        'name': 'ResNet-34',
        'kwargs': {
            'pretrained': True,
        },
        'backbone_features': 512
    }
    head: {
        'kwargs': {
            'hidden_size': 512, 
            'batch_first': False  # seq x batch x....
        }
    }
    lr: 5.e-4
    betas: [0.9, 0.999]
    log_n_steps: 400
